{"version":3,"sources":["styles/Cards.module.css","components/Cards.js","components/Chart.js","api/index.js","components/CountryPicker.js","App.js","index.js","styles/Chart.module.css","styles/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","newCases","newDeaths","newRecovered","recovered","CasesCard","caption","heading","value","classList","Grid","className","styles","card","join","component","Card","item","md","xs","CardContent","Typography","gutterBottom","variant","toLocaleString","gutter","Date","toDateString","container","justify","spacing","dead","loadingContainer","CircularProgress","Chart","useState","timelineData","setTimelineData","useEffect","LineChart","length","labels","map","dailyData","date","datasets","borderColor","fill","label","FormControl","daysLimitContainer","Select","daysLimit","defaultValue","displayEmpty","onChange","e","target","slice","MenuItem","fetchCountries","a","axios","get","countries","formattedData","country","name","code","iso2","console","log","fetchCountryTimeline","countryCode","url","timeline","error","fetchGlobalTimeline","CountryPicker","props","setCountries","open","setOpen","fetchCountryNames","Snackbar","autoHideDuration","onClose","Alert","elevation","severity","native","handleCountryChange","index","key","App","state","setState","fetchCountrySpecificData","renderCovidData","reverse","globalData","this","align","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7a95e11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__31WoQ\",\"card\":\"Cards_card__xCFVo\",\"gutter\":\"Cards_gutter__34kCK\",\"confirmed\":\"Cards_confirmed__7dLuc\",\"recovered\":\"Cards_recovered__7bsk-\",\"dead\":\"Cards_dead__xZ3Fv\",\"loadingContainer\":\"Cards_loadingContainer__1IGzF\"};","import {\n  Card,\n  CardContent,\n  CircularProgress,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\n\nimport styles from '../styles/Cards.module.css';\n\nconst Cards = ({ data }) => {\n  const {\n    confirmed,\n    deaths,\n    lastUpdate,\n    newCases,\n    newDeaths,\n    newRecovered,\n    recovered,\n  } = data;\n\n  const CasesCard = ({caption, heading, newCases, value, classList}) => {\n    return (\n      <Grid\n          className={[styles.card, classList].join(' ')}\n          component={Card}\n          item\n          md={3}\n          xs={12}\n        >\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant='caption'\n            >\n              {heading}\n            </Typography>\n            <Typography\n              variant='h4'\n            >\n              {value.toLocaleString()}\n            </Typography>\n            <Typography\n              className={styles.gutter}\n              variant='subtitle2'\n            >\n              {`+${newCases.toLocaleString()}`}\n            </Typography>\n            <Typography\n              className={styles.gutter}\n              variant='caption'\n            >\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography\n              variant='body2'\n            >\n              {caption}\n            </Typography>\n          </CardContent>\n        </Grid>\n    );\n  }\n\n  if (!confirmed) {\n    return (\n      <div\n        className={styles.loadingContainer}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid\n        container\n        justify='center'\n        spacing={3}\n      >\n        <CasesCard\n          caption='Number of confirmed cases'\n          classList={styles.confirmed}\n          heading='Total cases'\n          newCases={newCases}\n          value={confirmed}\n        />\n        <CasesCard\n          caption='Number of recovered cases'\n          classList={styles.recovered}\n          heading='Recovered'\n          newCases={newRecovered}\n          value={recovered}\n        />\n        <CasesCard\n          caption='Number of deaths'\n          classList={styles.dead}\n          heading='Deaths'\n          newCases={newDeaths}\n          value={deaths}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import { FormControl, MenuItem, Select } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport styles from '../styles/Chart.module.css';\n\nconst Chart = ({ data }) => {\n  const [timelineData, setTimelineData] = useState(data);\n\n  useEffect(() => {\n    setTimelineData(data);\n  }, [data]);\n\n  const LineChart = () =>\n    timelineData.length > 1 ? (\n      <Line\n        data={{\n          labels: timelineData.map(dailyData => dailyData.date),\n          datasets: [\n            {\n              borderColor: '#ee6f57',\n              data: timelineData.map(dailyData => dailyData.newCases),\n              fill: true,\n              label: 'New confirmed',\n            },\n            {\n              borderColor: 'rgba(0, 255, 0, 0.4)',\n              data: timelineData.map(dailyData => dailyData.newRecovered),\n              fill: true,\n              label: 'New recovered',\n            },\n            {\n              borderColor: 'rgba(255, 0, 0, 0.5)',\n              data: timelineData.map(dailyData => dailyData.newDeaths),\n              fill: true,\n              label: 'New deaths',\n            },\n          ],\n        }}\n      />\n    ) : null;\n\n  const handleChange = (e) => {\n    let daysLimit = e.target.value;\n\n    if (daysLimit) {\n      setTimelineData(data.slice(-daysLimit));\n    } else {\n      setTimelineData(data);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {\n        timelineData.length > 1 &&\n        <FormControl\n          className={styles.daysLimitContainer}\n          variant='filled'\n        >\n          <Select\n            className={styles.daysLimit}\n            defaultValue=''\n            displayEmpty\n            onChange={handleChange}\n          >\n            <MenuItem\n              value=''\n            >\n              All time\n            </MenuItem>\n            <MenuItem\n              value={7}\n            >\n              1 week\n            </MenuItem>\n            <MenuItem\n              value={14}\n            >\n              2 weeks\n            </MenuItem>\n            <MenuItem\n              value={30}\n            >\n              30 days\n            </MenuItem>\n          </Select>\n        </FormControl>\n      }\n      <LineChart />\n    </div>\n  );\n};\n\nexport default Chart;\n","import axios from 'axios';\n\nexport const fetchCountries = async () => {\n  let url = 'https://covid19.mathdro.id/api/countries';\n\n  try {\n    let {\n      data: { countries },\n    } = await axios.get(url);\n\n    let formattedData = countries.map(country => ({\n      name: country.name,\n      code: country.iso2,\n    }));\n\n    return formattedData;\n  } catch (error) {\n    console.log('Error occured: ', error);\n    return -1;\n  }\n};\n\nexport const fetchCountryTimeline = async countryCode => {\n  let url = `https://corona-api.com/countries/${countryCode}`;\n\n  try {\n    let {\n      data: {\n        data: { timeline },\n      },\n    } = await axios.get(url);\n\n    let formattedData = timeline.map(dailyData => ({\n      confirmed: dailyData.confirmed,\n      date: dailyData.date,\n      deaths: dailyData.deaths,\n      lastUpdate: dailyData['updated_at'],\n      newCases: dailyData['new_confirmed'],\n      newDeaths: dailyData['new_deaths'],\n      newRecovered: dailyData['new_recovered'],\n      recovered: dailyData.recovered,\n    }));\n\n    return formattedData;\n  } catch (error) {\n    console.log('Error occured: ', error);\n    return {\n      error: true,\n    };\n  }\n};\n\nexport const fetchGlobalTimeline = async () => {\n  let url = `https://corona-api.com/timeline`;\n\n  try {\n    let {\n      data: { data },\n    } = await axios.get(url);\n\n    let formattedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed,\n      date: dailyData.date,\n      deaths: dailyData.deaths,\n      lastUpdate: dailyData['updated_at'],\n      newCases: dailyData['new_confirmed'],\n      newDeaths: dailyData['new_deaths'],\n      newRecovered: dailyData['new_recovered'],\n      recovered: dailyData.recovered,\n    }));\n\n    return formattedData;\n  } catch (error) {\n    console.log('Error occured: ', error);\n    return {\n      error: true,\n    };\n  }\n};\n","import {\n  FormControl,\n  Select,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState} from 'react';\n\nimport { fetchCountries } from '../api';\n\nimport styles from '../styles/CountryPicker.module.css';\n\nconst CountryPicker = props => {\n  const [countries, setCountries] = useState([]);\n  const [open, setOpen] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryNames = async () => {\n      setCountries(await fetchCountries());\n    }\n\n    fetchCountryNames();\n  }, []);\n\n  const handleChange = (e) => {\n    props.handleCountryChange(e.target.value);\n  }\n\n  if (countries === -1) {\n    return (\n      <Snackbar\n        autoHideDuration={10000}\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Alert\n          elevation={6}\n          severity='warning'\n          variant='filled'\n        >\n          Some error occured while retrieving country names. Try reloading the page.\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  return (\n    <FormControl\n      className={styles.container}\n      variant='outlined'\n    >\n      <Select\n        className={styles.country}\n        defaultValue=''\n        native\n        onChange={handleChange}\n      >\n        <option\n          value=''\n        >\n          Worldwide\n        </option>\n        {\n          countries.map((country, index) => (\n            <option\n              key={index}\n              value={country.code}\n            >\n              {country.name}\n            </option>\n          ))\n        }\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default CountryPicker;\n","import {\n  Snackbar,\n  Typography,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { Component } from 'react';\n\nimport Cards from './components/Cards';\nimport Chart from './components/Chart';\nimport CountryPicker from './components/CountryPicker';\n\nimport { fetchCountryTimeline, fetchGlobalTimeline } from './api';\n\nimport styles from './App.module.css';\n\nimport 'fontsource-roboto';\n\nexport default class App extends Component {\n  // defining state like this instead of inside constructor\n  // because this will internally initializes the constructor\n  state = {\n    data: [{}],\n    open: true,\n  };\n\n  async componentDidMount() {\n    let globalData = await fetchGlobalTimeline();\n    \n    this.setState({\n      data: globalData,\n    });\n  }\n\n  handleCountryChange = countryCode => {\n    const fetchCountrySpecificData = async (code) => {\n      let data;\n\n      this.setState({\n        data: [{}],\n      });\n\n      if (!code) {\n        data = await fetchGlobalTimeline();\n      } else {\n        data = await fetchCountryTimeline(code);\n      }\n\n      this.setState({ data });\n    }\n\n    fetchCountrySpecificData(countryCode);\n  }\n\n  renderCovidData = () => {\n    let { data, open } = this.state;\n\n    if (data.error) {\n      return (\n        <Snackbar\n          autoHideDuration={5000}\n          open={open}\n          onClose={() => this.setState({ open: false })}\n        >\n          <Alert\n            elevation={6}\n            severity='error'\n            variant='filled'\n          >\n            Some error occured. Try reloading the page.\n          </Alert>\n        </Snackbar>\n      );\n    }\n\n    return (\n      <>\n        <Cards\n          data={data[0]}\n        />\n        <Chart\n          data={data.reverse()}\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <Typography\n          align='center'\n          className={styles.heading}\n          variant='h3'\n        >\n          COVID-19 Statistics\n        </Typography>\n        <CountryPicker\n          handleCountryChange={this.handleCountryChange}\n        />\n        {\n          this.renderCovidData()\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1L8DH\",\"daysLimitContainer\":\"Chart_daysLimitContainer__1C08l\",\"daysLimit\":\"Chart_daysLimit__3-keS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__1PNe2\",\"country\":\"CountryPicker_country__1yBo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"heading\":\"App_heading__2nYdz\"};"],"sourceRoot":""}